#!/bin/bash

set -eufo pipefail

{{ $asdf_version := "0.11.3 " -}}
{{ $asdf_dir := "${HOME}/.asdf" -}}

if [[ ! -d {{ $asdf_dir }} ]]; then
  git clone https://github.com/asdf-vm/asdf.git {{ $asdf_dir }} --branch v{{ $asdf_version }}
fi

{{ $sudo := "sudo " -}}
{{ if eq .chezmoi.username "root" -}}
{{   $sudo = "" -}}
{{ end -}}

. "{{ $asdf_dir }}/asdf.sh"

asdf={{ $asdf_dir }}/bin/asdf

{
  plugins=$($asdf plugin list)
} || {
  plugins=""
}

if [[ ! $plugins =~ "direnv" ]]; then
  $asdf plugin add direnv https://github.com/asdf-community/asdf-direnv
  $asdf direnv setup --shell bash --version latest
  $asdf direnv setup --shell fish --version latest
fi

if [[ ! $plugins =~ "ripgrep" ]]; then
  $asdf plugin add ripgrep https://gitlab.com/wt0f/asdf-ripgrep
  $asdf install ripgrep latest
  $asdf global ripgrep latest
fi

if [[ ! $plugins =~ "fzf" ]]; then
  $asdf plugin add fzf https://github.com/kompiro/asdf-fzf
  $asdf install fzf latest
  $asdf global fzf latest
fi

if [[ ! $plugins =~ "fd" ]]; then
  $asdf plugin add fd https://gitlab.com/wt0f/asdf-fd
  $asdf install fd latest
  $asdf global fd latest
fi

if [[ ! $plugins =~ "gitui" ]]; then
  $asdf plugin add gitui https://github.com/looztra/asdf-gitui
  $asdf install gitui latest
  $asdf global gitui latest
fi

if [[ ! $plugins =~ "neovim" ]]; then
  $asdf plugin add neovim https://github.com/richin13/asdf-neovim
  $asdf install neovim latest
  $asdf global neovim latest
fi

if [[ ! $plugins =~ "tmux" ]]; then
  {{ $tmux_packages := list
    "make"
    "gcc"
    "zip"
    "unzip"
    "autoconf"
    "bison"
    "pkg-config"
  -}}

  {{ $sudo }}apt-get install -y {{ $tmux_packages | join " " }}

  $asdf plugin add tmux https://github.com/aphecetche/asdf-tmux.git
  $asdf install tmux latest
  $asdf global tmux latest

  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

if [[ ! $plugins =~ "nodejs" ]]; then
  $asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
  $asdf nodejs update-nodebuild # update node definitions

  resolve_lts_version() {
    source "{{ $asdf_dir }}/plugins/nodejs/lib/utils.sh"

    local canon_version="$(
      # Find the first candidate which the alias match, then print it version
      print_index_tab \
        | awk -F'\t' -v "alias=lts" '$1 == alias { print $2; exit }'
    )"

    echo "$canon_version"
  }

  node_version=$(resolve_lts_version)

  $asdf install nodejs "$node_version"
  $asdf global nodejs "$node_version"
fi

if [[ ! $plugins =~ "ruby" ]]; then
  {{ $ruby_packages := list
    "autoconf"
    "bison"
    "patch"
    "build-essential"
    "libssl-dev"
    "libyaml-dev"
    "libreadline6-dev"
    "zlib1g-dev"
    "libgmp-dev"
    "libncurses5-dev"
    "libffi-dev"
    "libgdbm6"
    "libgdbm-dev"
    "libdb-dev"
    "uuid-dev"
  -}}

  $asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git

  {{ $sudo }}apt-get install -y {{ $ruby_packages | join " " }}

  $asdf install ruby latest
  $asdf global ruby latest
fi

if [[ ! $plugins =~ "erlang" ]]; then
  $asdf plugin add erlang https://github.com/asdf-vm/asdf-erlang.git

  {{ $erlang_packages := list
    "m4"
    "libncurses5-dev"
    "libssh-dev"
    "unixodbc-dev"
    "xsltproc"
    "fop"
    "libxml2-utils"
    "libncurses-dev"
  -}}

  {{ $sudo }}apt-get install -y {{ $erlang_packages | join " " }}

  KERL_CONFIGURE_OPTIONS="--disable-debug --without-javac" KERL_INSTALL_HTMLDOCS=no KERL_INSTALL_MANPAGES=no \
    $asdf install erlang latest
  $asdf global erlang latest
fi

if [[ ! $plugins =~ "elixir" ]]; then
  $asdf plugin add elixir https://github.com/asdf-vm/asdf-elixir.git

  $asdf install elixir latest
  $asdf global elixir latest
fi
