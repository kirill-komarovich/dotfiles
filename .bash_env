export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# function docker-ruby () {
#     local volume_path="$( realpath "$1" )"
#     local user="$( id -u "$USER" )"
#     docker run --rm -u $user -t -i --mount src="$volume_path",target=/ruby,type=bind ruby:2.6.5-alpine /bin/sh -c "cd /ruby && /bin/sh"
# }

# function dvm () {
#     local workdir="$(basename $(pwd))"
#     local user="$( id -u "$USER" )"
#     local command="${2:-sh}"

#     docker run --rm -v $(pwd):/"$workdir" -w /"$workdir" -u $user --name "$workdir"_dvm -t -i $1 $command
# }

# android setup
export ANDROID_HOME=$HOME/.android
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

export PATH=$PATH:~/.local/bin

# rust setup
if [ -f "$HOME/.cargo/env" ]; then
    . "$HOME/.cargo/env"
fi


# asdf setup
if [ -f "$HOME/.asdf/asdf.sh" ]; then
    . "$HOME/.asdf/asdf.sh"
fi

if [ -f "$HOME/.asdf/completions/asdf.bash" ]; then
    . "$HOME/.asdf/completions/asdf.bash"
fi
